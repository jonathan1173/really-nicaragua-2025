# Generated by Django 5.2.4 on 2025-08-10 23:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('slug', models.SlugField(blank=True, help_text='Versión del nombre para URLs amigables.', max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CategoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('slug', models.SlugField(blank=True, help_text='Versión del nombre para URLs amigables.', max_length=120, unique=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Categoría del Ítem',
                'verbose_name_plural': 'Categorías de Ítems',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('slug', models.SlugField(blank=True, help_text='Versión del nombre para URLs amigables.', max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CategoryPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.TextField(blank=True, help_text='Contenido principal para la página de esta categoría en el municipio.', verbose_name='Contenido Introductorio')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipality_pages', to='page.category', verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Página de Categoría',
                'verbose_name_plural': 'Páginas de Categoría',
                'ordering': ['municipality__name', 'category__name'],
            },
        ),
        migrations.CreateModel(
            name='ContentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('slug', models.SlugField(blank=True, help_text='Se genera automáticamente para la URL.', max_length=220, unique=True)),
                ('summary', models.TextField(help_text='Texto corto para mostrar en las listas.', verbose_name='Resumen')),
                ('image', models.ImageField(blank=True, null=True, upload_to='static/img/', verbose_name='Imagen Principal')),
                ('body', models.TextField(help_text='El contenido detallado para la página del ítem.', verbose_name='Cuerpo del Contenido')),
                ('published', models.BooleanField(default=True, verbose_name='Publicado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ubicación')),
                ('schedule', models.CharField(blank=True, max_length=100, null=True, verbose_name='Horario')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_items', to='page.categoryitem', verbose_name='Categoría del Ítem')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='page.categorypage', verbose_name='Página de Categoría')),
            ],
            options={
                'verbose_name': 'Ítem de Contenido',
                'verbose_name_plural': 'Ítems de Contenido',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('summary', models.TextField(blank=True)),
                ('date', models.DateField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='static/img/events/', verbose_name='Imagen Principal')),
                ('published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.department')),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('slug', models.SlugField(blank=True, help_text='Versión del nombre para URLs amigables. Se genera automáticamente.', max_length=120, unique=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipalities', to='page.department', verbose_name='Departamento')),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
                'ordering': ['department__name', 'name'],
                'unique_together': {('name', 'department')},
            },
        ),
        migrations.AddField(
            model_name='categorypage',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_pages', to='page.municipality', verbose_name='Municipio'),
        ),
        migrations.CreateModel(
            name='MunicipalityImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='static/img/municipalities/', verbose_name='Imagen Municipio')),
                ('title', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='page.municipality')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='categorypage',
            unique_together={('municipality', 'category')},
        ),
    ]
